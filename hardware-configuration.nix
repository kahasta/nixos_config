# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernel.sysctl = {
    "vm.swappiness" = 10;
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/60b928ab-1cd6-4a67-b9ea-9ddcbcdaa5c8";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/boot/efi" =
    { device = "/dev/disk/by-uuid/EFCA-D0CD";
      fsType = "vfat";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/f73a42c9-2fa3-48b2-9a32-85f20960c71d";
      fsType = "btrfs";
    };

# My Automount
  fileSystems."/mnt/archiew" = {
    device = "/dev/disk/by-uuid/12D66718762D0903";
    fsType = "ntfs-3g";
    options = [
      "auto"
      "users"
      "uid=1000"
      "gid=100"
      "dmask=027"
      "fmask=137"
      "utf8"
      "windows_names"
    ];
  };

  fileSystems."/mnt/games" = {
    device = "/dev/disk/by-uuid/2B3885DA3C58F14E";
    fsType = "ntfs-3g";
    options = [
      "auto"
      "users"
      "uid=1000"
      "gid=100"
      "dmask=027"
      "fmask=137"
      "utf8"
      "windows_names"
    ];
  };

  fileSystems."/mnt/data" = {
    device = "/dev/disk/by-uuid/5290678090676A05";
    fsType = "ntfs-3g";
    options = [
      "auto"
      "users"
      "uid=1000"
      "gid=100"
      "dmask=027"
      "fmask=137"
      "utf8"
      "windows_names"
    ];
  };


  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
